<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables

zoom = 1; // Initial zoom level
default_width = view_wview; // Initial view width
default_height = view_hview; // Initial view width
zoom_increment = 0.1; // How much to zoom by
target = obj_cursor; // Target to keep focus on when zooming
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get inputs

mouse_scroll_up = mouse_wheel_up();
mouse_scroll_down = mouse_wheel_down();
mouse_scrolling = false;
if mouse_scroll_up or mouse_scroll_down {
    mouse_scrolling = true;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Zooming

// If scrolling, apply it to the zoom variable
zoom += (mouse_scroll_up - mouse_scroll_down) * zoom_increment;

// Make sure zoom doesn't reach or fall below 0
if zoom &lt; zoom_increment {
    zoom = zoom_increment;
    }
else if zoom &gt; 10 { // Make sure it doesn't get too large
    zoom = 10;
    }

// INFO
// view_xview[0] ~~ x origin of view
// view_yview[0] ~~ y origin of view
// view_wview[0] ~~ width of view
// view_hview[0] ~~ height of view

if mouse_scrolling { // If scrolling/zoooming
    // Get the distance from the target to the orgigin.
    target_x_abs = target.x - view_xview[0];
    target_y_abs = target.y - view_yview[0];
    // Find the proportional from the object to the origin.
    target_x_p = target_x_abs / view_wview[0];
    target_y_p = target_y_abs / view_hview[0];

    // Set zoom
    view_wview[0] = default_width * zoom;
    view_hview[0] = default_height * zoom;
    
    // Calculate what the new distance from the target to the origin should be.
    target_x_new_abs = view_wview[0] * target_x_p;
    target_y_new_abs = view_hview[0] * target_y_p;
    // Set the origin based on where the object should be.
    view_xview[0] = target.x - target_x_new_abs;
    view_yview[0] = target.y - target_y_new_abs;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
